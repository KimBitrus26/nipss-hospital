# Generated by Django 4.2.9 on 2024-01-29 17:00

import accounts.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', models.SlugField(editable=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('send_password', models.CharField(blank=True, max_length=64, null=True)),
                ('country_code', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator(message='Country code must be between 1 to 3 digits.', regex='^\\d{1,3}$')])),
                ('phone_number', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator(message='Phone number must be between 6 to 18 digits.', regex='^\\d{6,18}$')])),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Phone verified')),
                ('is_profile_completed', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_patient', models.BooleanField(default=False, verbose_name='Is Patient')),
                ('is_receptionist', models.BooleanField(default=False, verbose_name='Is Recepttionist')),
                ('is_doctor', models.BooleanField(default=False, verbose_name='Is Doctor')),
                ('is_lab_technician', models.BooleanField(default=False, verbose_name='Is Lab Technician')),
                ('is_phamacist', models.BooleanField(default=False, verbose_name='Is Phamacist')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTPCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=accounts.models._generate_code, max_length=64, validators=[django.core.validators.MinLengthValidator(6)])),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_code', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
